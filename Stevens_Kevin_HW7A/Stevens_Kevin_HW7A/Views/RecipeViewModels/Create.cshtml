@model Stevens_Kevin_HW7A.Models.RecipeViewModel

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>RecipeViewModel</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.RecipeName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.RecipeName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.RecipeName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group ingredient-row">
            @Html.LabelFor(model => model.IngredientName, htmlAttributes: new { @class = "control-label col-md-2 ingredient-width" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.IngredientName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.IngredientName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group ingredient-row">
            @Html.LabelFor(model => model.MeasurementQuantity, htmlAttributes: new { @class = "control-label col-md-2 ingredient-width" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.MeasurementQuantity, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.MeasurementQuantity, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group ingredient-row">
            @Html.LabelFor(model => model.MeasurementType, htmlAttributes: new { @class = "control-label col-md-2 ingredient-width" })
            <div class="col-md-4">
                @Html.EnumDropDownListFor(model => model.MeasurementType, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.MeasurementType, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group ingredient-row">
            @Html.LabelFor(model => model.IngredientName2, htmlAttributes: new { @class = "control-label col-md-2 ingredient-width" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.IngredientName2, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.IngredientName2, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group ingredient-row">
            @Html.LabelFor(model => model.MeasurementQuantity2, htmlAttributes: new { @class = "control-label col-md-2 ingredient-width" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.MeasurementQuantity2, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.MeasurementQuantity2, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group ingredient-row">
            @Html.LabelFor(model => model.MeasurementType2, htmlAttributes: new { @class = "control-label col-md-2 ingredient-width" })
            <div class="col-md-4">
                @Html.EnumDropDownListFor(model => model.MeasurementType2, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.MeasurementType2, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group ingredient-row">
            @Html.LabelFor(model => model.IngredientName3, htmlAttributes: new { @class = "control-label col-md-2 ingredient-width" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.IngredientName3, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.IngredientName3, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group ingredient-row">
            @Html.LabelFor(model => model.MeasurementQuantity3, htmlAttributes: new { @class = "control-label col-md-2 ingredient-width" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.MeasurementQuantity3, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.MeasurementQuantity3, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group ingredient-row">
            @Html.LabelFor(model => model.MeasurementType3, htmlAttributes: new { @class = "control-label col-md-2 ingredient-width" })
            <div class="col-md-4">
                @Html.EnumDropDownListFor(model => model.MeasurementType3, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.MeasurementType3, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group ingredient-row">
            @Html.LabelFor(model => model.IngredientName4, htmlAttributes: new { @class = "control-label col-md-2 ingredient-width" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.IngredientName4, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.IngredientName4, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group ingredient-row">
            @Html.LabelFor(model => model.MeasurementQuantity4, htmlAttributes: new { @class = "control-label col-md-2 ingredient-width" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.MeasurementQuantity4, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.MeasurementQuantity4, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group ingredient-row">
            @Html.LabelFor(model => model.MeasurementType4, htmlAttributes: new { @class = "control-label col-md-2 ingredient-width" })
            <div class="col-md-4">
                @Html.EnumDropDownListFor(model => model.MeasurementType4, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.MeasurementType4, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group ingredient-row">
            @Html.LabelFor(model => model.IngredientName5, htmlAttributes: new { @class = "control-label col-md-2 ingredient-width" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.IngredientName5, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.IngredientName5, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group ingredient-row">
            @Html.LabelFor(model => model.MeasurementQuantity5, htmlAttributes: new { @class = "control-label col-md-2 ingredient-width" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.MeasurementQuantity5, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.MeasurementQuantity5, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group ingredient-row">
            @Html.LabelFor(model => model.MeasurementType5, htmlAttributes: new { @class = "control-label col-md-2 ingredient-width" })
            <div class="col-md-4">
                @Html.EnumDropDownListFor(model => model.MeasurementType5, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.MeasurementType5, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group ingredient-row">
            @Html.LabelFor(model => model.IngredientName6, htmlAttributes: new { @class = "control-label col-md-2 ingredient-width" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.IngredientName6, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.IngredientName6, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group ingredient-row">
            @Html.LabelFor(model => model.MeasurementQuantity6, htmlAttributes: new { @class = "control-label col-md-2 ingredient-width" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.MeasurementQuantity6, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.MeasurementQuantity6, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group ingredient-row">
            @Html.LabelFor(model => model.MeasurementType6, htmlAttributes: new { @class = "control-label col-md-2 ingredient-width" })
            <div class="col-md-4">
                @Html.EnumDropDownListFor(model => model.MeasurementType6, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.MeasurementType6, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group ingredient-row">
            @Html.LabelFor(model => model.IngredientName7, htmlAttributes: new { @class = "control-label col-md-2 ingredient-width" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.IngredientName7, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.IngredientName7, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group ingredient-row">
            @Html.LabelFor(model => model.MeasurementQuantity7, htmlAttributes: new { @class = "control-label col-md-2 ingredient-width" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.MeasurementQuantity7, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.MeasurementQuantity7, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group ingredient-row">
            @Html.LabelFor(model => model.MeasurementType7, htmlAttributes: new { @class = "control-label col-md-2 ingredient-width" })
            <div class="col-md-4">
                @Html.EnumDropDownListFor(model => model.MeasurementType7, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.MeasurementType7, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group ingredient-row">
            @Html.LabelFor(model => model.IngredientName8, htmlAttributes: new { @class = "control-label col-md-2 ingredient-width" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.IngredientName8, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.IngredientName8, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group ingredient-row">
            @Html.LabelFor(model => model.MeasurementQuantity8, htmlAttributes: new { @class = "control-label col-md-2 ingredient-width" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.MeasurementQuantity8, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.MeasurementQuantity8, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group ingredient-row">
            @Html.LabelFor(model => model.MeasurementType8, htmlAttributes: new { @class = "control-label col-md-2 ingredient-width" })
            <div class="col-md-4">
                @Html.EnumDropDownListFor(model => model.MeasurementType8, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.MeasurementType8, "", new { @class = "text-danger" })
            </div>
        </div>


        

        <div class="form-group">
            @Html.LabelFor(model => model.PrepTime, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PrepTime, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PrepTime, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CookTime, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CookTime, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CookTime, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TotalCost, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.TotalCost, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.TotalCost, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Notes, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Notes, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Notes, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Instructions, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                     @Html.EditorFor(model => model.Instructions, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Instructions, "", new { @class = "text-danger" })
                </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
